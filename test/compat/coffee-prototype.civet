{testCase} from ../helper.civet

describe "prototype shorthand", ->
  testCase """
    without following identifier
    ---
    "civet coffee-prototype"
    a::
    ---
    a.prototype
  """

  testCase """
    with following identifier
    ---
    "civet coffee-prototype"
    a::b
    ---
    a.prototype.b
  """

  testCase """
    multiple
    ---
    "civet coffee-prototype"
    a::::::
    ---
    a.prototype.prototype.prototype
  """

  testCase """
    with method call, ampersand shorthand, implicit var dec
    ---
    'civet coffeeCompat'
    Array::map.call &+(a=1)
    ---
    Array.prototype.map.call($ => { var a;return $+(a=1)})
  """

  // #1124
  testCase """
    :: not treated as property and return type
    ---
    'civet coffeeCompat'
    T::void => x
    ---
    T.prototype.void(() => x)
  """
