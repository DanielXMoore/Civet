{testCase, throws} from ../helper.civet

describe "JSX object shorthand", ->
  testCase """
    identifier in braces
    ---
    <div {foo} />
    ---
    <div foo={foo} />
  """

  testCase """
    separate identifiers in braces
    ---
    <div {foo} {bar} />
    ---
    <div foo={foo} bar={bar} />
  """

  testCase """
    two identifiers in braces
    ---
    <div {foo, bar} />
    ---
    <div foo={foo} bar={bar} />
  """

  testCase """
    property in braces
    ---
    <div {foo: bar} />
    ---
    <div foo={bar} />
  """

  testCase """
    identifier and property in braces
    ---
    <div {foo, bar: baz} />
    ---
    <div foo={foo} bar={baz} />
  """

  testCase """
    identifier and rest in braces
    ---
    <div {foo, ...props} />
    ---
    <div foo={foo} {...props} />
  """

  testCase """
    identifier and property and rest in braces
    ---
    <div {foo, bar: baz, ...props} />
    ---
    <div foo={foo} bar={baz} {...props} />
  """

  testCase """
    multiple rests in braces
    ---
    <div {...props1, ...props2} />
    ---
    <div {...props1} {...props2} />
  """

  testCase """
    method in braces
    ---
    <div {method(x){x}} />
    ---
    <div method={function method(x){return x}} />
  """

  testCase """
    async method in braces
    ---
    <div {async method(x){x}} />
    ---
    <div method={async function method(x){return x}} />
  """

  testCase """
    generator method in braces
    ---
    <div {* method(x){x}} />
    ---
    <div method={function * method(x){return x}} />
  """

  testCase """
    async generator method in braces
    ---
    <div {async* method(x){x}} />
    ---
    <div method={async function * method(x){return x}} />
  """

  testCase """
    typed method in braces
    ---
    <div {method(x: number): number {x}} />
    ---
    <div method={function method(x: number): number {return x}} />
  """

  testCase """
    identifier, property, and method in braces
    ---
    <div {foo, bar: baz, method(x){x}} />
    ---
    <div foo={foo} bar={baz} method={function method(x){return x}} />
  """

  testCase """
    computed property name in braces
    ---
    <div {[foo()]: bar} />
    ---
    <div {...{[foo()]: bar}} />
  """

  testCase """
    mix of computed and regular property names in braces
    ---
    <div {[foo()]: bar, regular, [bar()]: baz} />
    ---
    <div regular={regular} {...{[foo()]: bar, [bar()]: baz}} />
  """

  testCase """
    get function in braces
    ---
    <div {get foo(){0}} />
    ---
    <div {...{get foo(){return 0}}} />
  """

  testCase """
    set function in braces
    ---
    <div {set foo(){0}} />
    ---
    <div {...{set foo(){0}}} />
  """

  testCase """
    set function in braces
    ---
    <div {get foo(){0}, set foo(){0}} />
    ---
    <div {...{get foo(){return 0}, set foo(){0}}} />
  """
