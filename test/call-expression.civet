{testCase} from ./helper.civet

describe "call-expression", ->
  testCase """
    parens
    ---
    x(y)
    ---
    x(y)
  """

  testCase """
    space args
    ---
    x y
    x y z
    x y, z
    a b, c d
    ---
    x(y)
    x(y(z))
    x(y, z)
    a(b, c(d))
  """

  testCase """
    optional function
    ---
    x?.(y)
    x?(y)
    x? y
    ---
    x?.(y)
    x?.(y)
    x?.(y)
  """

  testCase """
    leading .
    ---
    $ 'body'
    .click (e) ->
      $ '.box'
      .fadeIn 'fast'
      .addClass 'show'
    .css 'background', 'white'
    ---
    $('body')
    .click(function(e) {
      return $('.box')
      .fadeIn('fast')
      .addClass('show')
    })
    .css('background', 'white')
  """

  describe "https://github.com/DanielXMoore/Civet/issues/197", ->
    testCase """
      leading . after plain identifier
      ---
      data
      .map (x) => x + 1
      .forEach (x) => console.log
      ---
      data
      .map((x) => x + 1)
      .forEach((x) => console.log)
    """

    testCase """
      nested leading . after plain identifier
      ---
      data
        .map (x) => x + 1
        .forEach (x) => console.log
      ---
      data
        .map((x) => x + 1)
        .forEach((x) => console.log)
    """
