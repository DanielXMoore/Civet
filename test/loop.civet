{testCase} from ./helper.civet

describe "loop", ->
  testCase """
    basic
    ---
    loop
      x++
      break
    ---
    while(true) {
      x++
      break
    }
  """

  testCase """
    postfix
    ---
    run() loop
    ---
    while(true) { run() }
  """

  testCase """
    empty
    ---
    loop
    ---
    while(true);
  """

  testCase """
    loop generator
    ---
    loop*
      1
    ---
    (function*(){while(true) {
      yield 1
    };return})()
  """

  testCase """
    one-line loop generator
    ---
    loop* 1
    ---
    (function*(){while(true) yield 1;return})()
  """

  testCase """
    postfix loop generator
    ---
    infinite := 1 loop*
    ---
    const infinite =(function*(){while(true) { yield  1 };return})()
  """

  testCase """
    break with
    ---
    =>
      loop
        if special()
          break with 'done'
        break if finished()
    ---
    () => {
      let results;results=[];while(true) {
        if (special()) {
          results = 'done';break
        }
        if (finished()) { break } else {results.push(void 0)}
      };return results;
    }
  """

  testCase """
    break with only
    ---
    =>
      loop
        if finished()
          break with 'done'
    ---
    () => {
      let results;while(true) {
        if (finished()) {
          results = 'done';break
        }
      };return results;
    }
  """
