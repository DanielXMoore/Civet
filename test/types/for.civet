{testCase} from ../helper.civet

describe "[TS] for", ->
  testCase """
    explicit declaration
    ---
    for var x: T of y
    ---
    for (var x: T of y);
  """

  testCase """
    for..of
    ---
    for x: T of y
    ---
    for (const x: T of y);
  """

  testCase """
    for..in
    ---
    for x: T in y
    ---
    for (const x: T in y);
  """

  testCase """
    parenthesized
    ---
    for (x: T of y)
    ---
    for (const x: T of y);
  """

  describe ":: typing of properties", ->
    testCase """
      array
      ---
      for [type:: TokenType, token] of Object.entries(tokens)
      ---
      for (const [type, token]: [ TokenType,unknown] of Object.entries(tokens));
    """

    testCase """
      object
      ---
      for {type:: TokenType, token} of items
      ---
      for (const {type, token}: {type: TokenType, token: unknown} of items);
    """
