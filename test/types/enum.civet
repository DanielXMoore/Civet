{testCase} from ../helper.civet

describe "[TS] enum", ->
  // Examples from https://www.typescriptlang.org/docs/handbook/enums.html#computed-and-constant-members

  testCase """
    braced
    ---
    enum Direction {
      Up,
      Down,
      Left,
      Right,
    }
    ---
    enum Direction {
      Up,
      Down,
      Left,
      Right,
    }
  """

  testCase """
    indented
    ---
    enum Direction
      Up
      Down
      Left
      Right
    ---
    enum Direction {
      Up,
      Down,
      Left,
      Right,
    }
  """

  testCase.js """
    no initializers
    ---
    enum Direction
      Up
      Down
      Left
      Right
    ---
    let Direction = {};
    Direction[Direction["Up"] = 0] = "Up";
    Direction[Direction["Down"] = Direction["Up"] + 1] = "Down";
    Direction[Direction["Left"] = Direction["Down"] + 1] = "Left";
    Direction[Direction["Right"] = Direction["Left"] + 1] = "Right";

  """

  testCase.js """
    initializers
    ---
    enum Direction
      Up
      Down = 1 + 2
      Left
      Right = foo()
    ---
    let Direction = {};
    Direction[Direction["Up"] = 0] = "Up";
    Direction[Direction["Down"] = 1 + 2] = "Down";
    Direction[Direction["Left"] = Direction["Down"] + 1] = "Left";
    Direction[Direction["Right"] = foo()] = "Right";

  """

  testCase.js """
    initializers referring to other members
    ---
    enum Direction
      Up
      Down = Up + 1
      Left = Up + Down
      Right = Other.Up + Other.Down
    ---
    let Direction = {};
    Direction[Direction["Up"] = 0] = "Up";
    Direction[Direction["Down"] = Direction["Up"] + 1] = "Down";
    Direction[Direction["Left"] = Direction["Up"] + Direction["Down"]] = "Left";
    Direction[Direction["Right"] = Other.Up + Other.Down] = "Right";

  """

  testCase.js """
    string initializers
    ---
    enum Direction
      Up = "up"
      Down = `down`
      Left = 'left'
      Right = 4
    ---
    let Direction = {};
    Direction["Up"] = "up";
    Direction["Down"] = `down`;
    Direction["Left"] = 'left';
    Direction[Direction["Right"] = 4] = "Right";

  """

  testCase """
    const enum
    ---
    const enum Direction
      Up
      Down
      Left
      Right
    ---
    const enum Direction {
      Up,
      Down,
      Left,
      Right,
    }
  """

  testCase.js """
    const enum js
    ---
    const enum Direction
      Up
      Down
      Left
      Right

    Direction.Up
    ---
    let Direction = {};
    Direction[Direction["Up"] = 0] = "Up";
    Direction[Direction["Down"] = Direction["Up"] + 1] = "Down";
    Direction[Direction["Left"] = Direction["Down"] + 1] = "Left";
    Direction[Direction["Right"] = Direction["Left"] + 1] = "Right";


    Direction.Up
  """
