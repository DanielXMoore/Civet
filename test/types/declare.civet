{testCase} from ../helper.civet

describe "[TS] declare", ->
  // Examples from https://www.typescriptlang.org/docs/handbook/declaration-files/by-example.html
  testCase """
    declare function
    ---
    declare function getWidget(n: number): Widget
    declare function getWidget(s: string): Widget[]
    ---
    declare function getWidget(n: number): Widget
    declare function getWidget(s: string): Widget[]
  """

  testCase """
    declare class with braces
    ---
    declare class Greeter {
      constructor(greeting: string);
      greeting: string;
      showGreeting(): void;
    }
    ---
    declare class Greeter {
      constructor(greeting: string);
      greeting: string;
      showGreeting(): void;
    }
  """

  testCase """
    declare class without braces
    ---
    declare class Greeter
      constructor(greeting: string)
      greeting: string
      showGreeting(): void
    ---
    declare class Greeter {
      constructor(greeting: string);
      greeting: string
      showGreeting(): void
    }
  """

  testCase """
    declare namespace
    ---
    declare namespace NodeJS {
      interface Module {
        _compile(content: string, filename: string): void
      }
    }
    ---
    declare namespace NodeJS {
      interface Module {
        _compile(content: string, filename: string): void
      }
    }
  """

  testCase """
    declare namespace with class with braces
    ---
    declare namespace NodeJS {
      class Greeter {
        constructor(greeting: string);
        greeting: string;
        showGreeting(): void;
      }
    }
    ---
    declare namespace NodeJS {
      class Greeter {
        constructor(greeting: string);
        greeting: string;
        showGreeting(): void;
      }
    }
  """

  testCase """
    declare namespace with class without braces
    ---
    declare namespace NodeJS
      class Greeter
        constructor(greeting: string)
        greeting: string
        showGreeting(): void
    ---
    declare namespace NodeJS {
      class Greeter {
        constructor(greeting: string);
        greeting: string
        showGreeting(): void
      }
    }
  """
