{compile} from ../source/main.coffee
assert from assert

{SourceMap} from ../source/util.coffee

describe "source map", ->
  it "should generate a source mapping", ->
    src := """
      x := a + 3
      y++

      y = x + a
    """

    {code, sourceMap} := compile(src, {
      sourceMap: true
    })

    srcMapJSON := sourceMap.json("yo.civet", "yo.ts")

    // console.log src, code

    // console.dir sm.data,
    //   depth: 8

    // base64Encode := (src) ->
    //   return Buffer.from(src).toString('base64')

    // // Use this to log the code + sourcemap which can be pasted into https://evanw.github.io/source-map-visualization/ see how it works
    // console.log `${code}\n//# sourceMappingURL=data:application/json;base64,${base64Encode JSON.stringify(srcMapJSON)}`

  it "should parse from base64Encoded", ->
    src := """
      x := a + 3
      y++

      y = x + a
    """

    {code, sourceMap} := compile src,
      sourceMap: true

    srcMapJSON := sourceMap.json("yo.civet", "yo.ts")

    base64Encode := (src) ->
      return Buffer.from(src).toString('base64')

    base64Encoded := base64Encode JSON.stringify(srcMapJSON)

    parsed := SourceMap.parseWithLines base64Encoded

    //console.dir parsed, {depth: null}

    assert.deepEqual parsed.lines, sourceMap.data.lines
