{testCase} from ./helper.civet

describe "strings", ->

  testCase """
    empty
    ---
    x = ""
    ---
    x = ""
  """

  testCase """
    CoffeeScript interpolation empty
    ---
    "civet coffeeInterpolation"
    x = ""
    ---
    x = ""
  """

  testCase """
    a
    ---
    x = "a"
    ---
    x = "a"
  """

  // NOTE: Backslashes are escaped so two here become one in the input
  testCase """
    line continuation
    ---
    x = "a\\
    b"
    ---
    x = "a\\
    b"
  """

  testCase """
    multi-line
    ---
    x = "a
    b"
    ---
    x = "a\\nb"
  """

  testCase """
    escaped backslash then newline
    ---
    x = "a\\\\
    b"
    ---
    x = "a\\\\\\nb"
  """

  testCase """
    two newlines
    ---
    "a\nb\nc"
    "\n\n"
    ---
    "a\\nb\\nc"
    "\\n\\n"
  """

  testCase """
    windows newlines
    ---
    "a\r\nb\r\nc"
    "\r\n\r\n"
    ---
    "a\\nb\\nc"
    "\\n\\n"
  """

  testCase """
    old mac newlines
    ---
    "a\rb\rc"
    "\r\r"
    ---
    "a\\nb\\nc"
    "\\n\\n"
  """

  testCase """
    escaped backslash then non-escaped backslash then newline
    ---
    x = "a\\\\\\
    b"
    ---
    x = "a\\\\\\
    b"
  """

  // NOTE: the `a` variable is only to make the string not be interpereted as a directive prologue

  testCase '''
    coffee compat string interpolation
    ---
    "civet coffee-compat"
    a
    "a#{b}c"
    ---
    a;
    `a${b}c`
  '''

  testCase '''
    coffee compat string interpolation with ${}
    ---
    "civet coffee-compat"
    a
    "a#{b}c${d}"
    ---
    a;
    `a${b}c\\${d}`
  '''

  testCase '''
    coffee compat string interpolation with escaped octothorpe
    ---
    "civet coffee-compat"
    a
    "a\\#{b}c"
    ---
    a
    "a\\#{b}c"
  '''

  testCase '''
    coffee compat string interpolation with newlines
    ---
    "civet coffee-compat"
    a
    "a
    #{b}c"
    ---
    a;
    `a\\n${b}c`
  '''

  testCase '''
    coffee compat tagged template literal
    ---
    "civet coffee-compat"
    tag"a#{b}c"
    ---
    tag`a${b}c`
  '''

  testCase '''
    coffee compat tagged template literal without interpolation
    ---
    "civet coffee-compat"
    tag"a"
    ---
    tag`a`
  '''

  testCase '''
    triple-quote tagged template literal
    ---
    tag"""a#{b}c"""
    ---
    tag`a${b}c`
  '''

  testCase '''
    multi-line function call in """
    ---
    """
      #{func 1,
      2}
    """
    ---
    `${func(1,
      2)}`
  '''
