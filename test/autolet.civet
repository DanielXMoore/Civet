{testCase} from ./helper.civet

describe "auto let", ->
    testCase """
        auto let
        ---
        "civet autoLet"
        for b of [1]
            a = 1
            b = 1
            for c of [1]
                a = 2
            a = 3
        a = 4
        ---
        for (const b of [1]) {
            let a = 1
            b = 1
            for (const c of [1]) {
                a = 2
            }
            a = 3
        }
        let a = 4
    """

describe "auto let with function", ->
    testCase """
        auto let with function
        ---
        "civet autoLet"
        function b(a) {
            a = 1
        }
        a = 2
        ---
        function b(a) {
            return a = 1
        }
        let a = 2
    """

describe "auto let with multiple declaration", ->
    testCase """
        auto let with multiple declaration
        ---
        "civet autoLet"
        c = "str"
        [a, b] = [1, 2]
        [c, d] = [3, 4]
        ---
        let c = "str"
        let [a, b] = [1, 2]
        let d
        [c, d] = [3, 4]
    """

describe "auto let inner assignment expression", ->
    testCase """
    auto let inner assignment expression
    ---
    "civet autoLet"
    [a, b] = function(a) {
        a = 2
        b = 2
        return [a, b]
    }(a)
    ---
    let [a, b] = function(a) {
        a = 2
        let b = 2
        return [a, b]
    }(a)
    """