{testCase} from ./helper.civet

describe "property access", ->
  testCase """
    with indexing longhand
    ---
    a?.[2]
    ---
    a?.[2]
  """

  testCase """
    with indexing shorthand
    ---
    a?[2]
    ---
    a?.[2]
  """

  testCase """
    accessed names are not reserved
    ---
    a.case
    ---
    a.case
  """

  testCase """
    access reserved word then
    ---
    a.then
    ---
    a.then
  """

  testCase """
    super property access
    ---
    super.method()
    ---
    super.method()
  """

  testCase """
    super indexing
    ---
    super["method"]()
    ---
    super["method"]()
  """

  testCase """
    super double access
    ---
    super.foo.bar
    ---
    super.foo.bar
  """

  describe "string property access shorthand", ->
    testCase """
      double quoted
      ---
      x."hello world"
      ---
      x["hello world"]
    """

    testCase """
      triple quoted
      ---
      x.'''hello
      world'''
      ---
      x[`hello
      world`]
    """

    testCase """
      template
      ---
      x.`hello ${name}`
      ---
      x[`hello ${name}`]
    """

  describe "integer property access shorthand", ->
    testCase """
      decimal
      ---
      x.1
      ---
      x[1]
    """

    testCase """
      decimal with separators
      ---
      x.1_000_000
      ---
      x[1_000_000]
    """

    testCase """
      octal
      ---
      x.0o777
      ---
      x[0o777]
    """

    testCase """
      hex
      ---
      x.0xfff
      ---
      x[0xfff]
    """

    testCase """
      multiple
      ---
      x.0.0
      ---
      x[0][0]
    """

    testCase """
      negative
      ---
      x.-1
      ---
      x.at(-1)
    """
