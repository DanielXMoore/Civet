{testCase} from ./helper.civet

describe "while", ->
  testCase """
    basic
    ---
    while (x < 3)
      x++
    ---
    while (x < 3) {
      x++
    }
  """

  testCase """
    optional parens
    ---
    while x < 3
      x++
    ---
    while (x < 3) {
      x++
    }
  """

  testCase """
    variable that starts with while isn't interpreted as block
    ---
    while2
    x
    ---
    while2
    x
  """

  testCase """
    until
    ---
    until (x < 3)
      x--
    ---
    while (!(x < 3)) {
      x--
    }
  """

  testCase """
    postfix while
    ---
    x() while y
    ---
    while (y) { x() }
  """

  testCase """
    postfix until
    ---
    x() until y
    ---
    while (!(y)) { x() }
  """

  testCase """
    postfix while with semicolon
    ---
    x() while y;
    ---
    while (y) { x() };
  """

  testCase """
    postfix until with semicolon
    ---
    x() until y;
    ---
    while (!(y)) { x() };
  """

  describe "condition decs", ->
    testCase """
      while
      ---
      while {x, y} := next()
        x++
      ---
      let ref;
      while (ref = next()) {
        const {x, y} = ref;
        x++
      }
    """
