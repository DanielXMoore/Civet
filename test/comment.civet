{testCase, throws} from ./helper.civet

describe "comment", ->
  testCase """
    keeps comments as written
    ---
    // Hi
    ---
    // Hi
  """

  testCase """
    keeps comments at beginning and end of file
    ---
    // Hi
    x
    /* bye */
    ---
    // Hi
    x
    /* bye */
  """

  testCase """
    CoffeeScript style multi-line comments
    ---
    ###
    hi
    ###

    ---
    /*
    hi
    */

  """

  testCase """
    escapes */ in ### block comments
    ---
    ###
    hi */
    ###
    ---
    /*
    hi * /
    */
  """

  testCase """
    remains after empty statement in nested block
    ---
    ->
      ; // Hey
    ---
    (function() {
      ; // Hey
    })
  """

  testCase """
    inline stays in empty statement
    ---
    ->
      /**/; // Hey
    ---
    (function() {
      /**/; // Hey
    })
  """

  testCase """
    space before trailing comment doesn't cause application
    ---
    x := 6 // Hey
    y
    ---
    const x = 6 // Hey
    y
  """

  testCase """
    coffee comment with "civet coffee-compat"
    ---
    "civet coffee-compat"
    # coffeescript: 1
    ---
    // coffeescript: 1
  """

  testCase '''
    coffee multiline comment with coffee single line comments
    ---
    "civet coffee-compat"
    #
    ###
    .
    ###
    ---
    //
    /*
    .
    */
  '''

  testCase '''
    quad octothorpe single line comment
    ---
    "civet coffee-compat"
    #### hi
    x
    ---
    //### hi
    x
  '''

  testCase """
    comments before statement
    ---
    /*first*/ break
    /*second*/ break
    loop
      /*inside*/ break
    ---
    /*first*/ break;
    /*second*/ break
    while(true) {
      /*inside*/ break
    }
  """, wrapper: """
    while(true) {
      CODE
    }
  """

  testCase """
    comments after directives
    ---
    "civet -implicitReturns"
    // hi
    ---
    // hi
  """

  testCase """
    comments before directives
    ---
    // welcome
    "civet autoConst"
    a = hi()
    ---
    // welcome
    const a = hi()
  """

  testCase """
    comments same line as a directive
    ---
    "civet -implicitReturns" // hi!
    "civet autoLet" // hello!
    "civet coffeeBooleans" // how are you?
    ---
    // hi!
    // hello!
    // how are you?
  """

  testCase """
    directives with comments still work
    ---
    "civet -implicitReturns" // hi
    "civet autoLet" // hello
    a = -> console.log 'hi'
    ---
    // hi
    // hello
    let a = function() { console.log('hi') }
  """

  testCase """
    inline comment on a directive
    ---
    "civet autoLet" /* hi! */
    ---
    /* hi! */
  """

  testCase """
    multiline comment among directives
    ---
    "civet -implicitReturns" /* 
      multiline comment
    */
    "civet autoLet" // hello there!
    a = -> console.log 'hi'
    ---
    /* 
      multiline comment
    */
    // hello there!
    let a = function() { console.log('hi') }
  """

  testCase """
    skip blank lines for uncommented directives
    ---
    "civet autoLet" /* hi! */
    "civet -implicitReturns"
    "civet coffeeComment"       
    "civet coffeeBooleans" // hello!
    ---
    /* hi! */
    // hello!
  """

  testCase """
    trim multiple leading spaces for comments on directives
    ---
    "civet -implicitReturns"  // left-
    "civet autoLet"           // aligned
    ---
    // left-
    // aligned
  """

  testCase """
    comments near directives (single quotes)
    ---
    // top
    'civet -implicitReturns' // hi!
    'civet autoLet' // hello!
    'civet coffeeBooleans' /* 
      how are you?
    */
    a = -> console.log { +hi }
    ---
    // top
    // hi!
    // hello!
    /* 
      how are you?
    */
    let a = function() { console.log({ hi: true }) }
  """

  testCase """
    newline after directive preserved
    ---
    "civet coffeeCompat"

    console.log 'hi'
    ---

    console.log('hi')
  """
