import TSService from "../source/lib/typescript-service.mjs"
import { pathToFileURL } from "url"
import { TextDocument } from "vscode-languageserver-textdocument"
import fs from "fs"

{ forwardMap } from ../source/lib/util.mjs

assert from assert

loadFile := async (service: Awaited<ReturnType<typeof TSService>>, path: string) ->
  document := TextDocument.create(pathToFileURL(path).href, "civet", 0, fs.readFileSync(path, "utf8"))
  service.host.addOrUpdateDocument(document)

describe "ts service", ->
  @timeout 5000
  it "should launch ts service", async ->
    service := await TSService(pathToFileURL("./integration/project-test/").href)
    await service.loadPlugins()

    filePath := "./integration/project-test/a.civet"
    await loadFile(service, filePath)

    diagnostics := service.getSemanticDiagnostics(filePath + ".tsx")

    console.log diagnostics
    // console.log service.host.getScriptFileNames()

    assert.equal diagnostics.length, 0

    {transpiledDoc, sourcemapLines} := service.host.getMeta(filePath)!

    position := transpiledDoc!.offsetAt forwardMap(sourcemapLines, {
      line: 0
      character: 0
    })
    info := service.getQuickInfoAtPosition(filePath + ".tsx", position)

    assert info
