{ build } from esbuild
civetPlugin from @danielx/civet/esbuild

minify := false // !watch or process.argv.includes '--minify'
sourcemap := true

build({
  +metafile
  entryPoints: ['source/extension.civet']
  tsconfig: "./tsconfig.json"
  bundle: true
  external: [
    'vscode'
  ]
  format: "cjs"
  sourcemap
  minify
  platform: 'node'
  plugins: [
    civetPlugin()
  ]
  outfile: 'dist/extension.js'
}).catch ->
  process.exit 1
.then ({metafile}) ->
  { writeFileSync } := await import('fs')
  writeFileSync 'extension.metafile', JSON.stringify(metafile)

additionalExcludes := process.env.NODE_ENV is "development" ?
  [
    '@danielx/civet'
    'typescript'
    'vscode-languageclient'
    'vscode-languageserver'
    'vscode-languageserver-textdocument'
  ]
: [ ]

build({
  +metafile
  entryPoints: ['source/server.mts']
  outdir: 'dist'
  tsconfig: "./tsconfig.json"
  format: "cjs"
  +bundle
  external: [
    'vscode'
  ].concat(additionalExcludes)
  sourcemap
  minify
  platform: 'node'
  plugins: [
    civetPlugin()
  ]
}).catch ->
  process.exit 1
.then ({metafile}) ->
  { writeFileSync } := await import('fs')
  writeFileSync 'server.metafile', JSON.stringify(metafile)
