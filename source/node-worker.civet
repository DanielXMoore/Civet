{ parentPort } from node:worker_threads

module from node:module
try module.enableCompileCache()

async do
  // import dynamically to use compile cache
  { compile } from ./main.civet

  parentPort!.on 'message', {id:: number, op:: string, args:: any[]} =>
    try
      let result
      switch op
        when "compile"
          result = await (compile as any) ...args
        else
          throw new Error `Unknown operation: ${op}`
      // If we pass in an `errors` option, its modification is part of output
      parentPort!.postMessage {id, result, errors: args[1]?.errors}
    catch error
      console.log `Civet worker failed to compile:`, error
      parentPort!.postMessage {id, error: {
        type: error.constructor.name
        error.{name,message}
      }}
